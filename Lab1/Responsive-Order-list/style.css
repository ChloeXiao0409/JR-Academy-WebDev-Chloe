* {
    box-sizing: border-box;
}

body {
    /* HSL:hue色调 saturation饱和度 light */
    /* hue -> 0-360. 0/360 - red, 120 - green, 240 - blue.*/
    --h: 212deg;
    /* saturation */
    --s: 71%;
    /* light darker<< >>lighter*/
    --l: 43%;
    --brandColor: hsl(var(--h), var(--s), var(--l));
    font-family: Montserrat, sans-serif;
    margin: 0;
    background-color: whitesmoke;
}

p {
    margin: 0;
    line-height: 1.6;
}

ol {
    list-style: none;
    /* Reset list counter */
    counter-reset: list;
    padding: 0 1rem;
}

li {
    /* Set hue for each li align with harmony*/
    /* From red to blue */
    --h: calc((var(--i) - 1) * (240 / var(--length)));
    --s: 71%;
    /* Set two light degree for mimic the loading banner increase */
    --l1: 62%;
    --l2: 88%;
    /* Increase loading banner */
    --c1: hsl(var(--h), var(--s), var(--l1));
    /* Base loading banner */
    --c2: hsl(var(--h), var(--s), var(--l2));
    /* Set where should the increase loading banner stop */
    --stop: calc(100% / var(--length) * var(--i));
    /* Set li (parent level) for relative is for setting
    li-items (Child level) to be absolute to its parent */
    position: relative;
    /* Start calculate: For each li, counter++ */
    counter-increment: list;
    max-width: 45rem;
    /* Make it to center */
    margin: 2rem auto;
    background-color: white;
    padding: 2rem 1rem 1rem;
    box-shadow: 0.1rem 0.1rem 1.5rem rgba(0, 0, 0, 0.3);
    border-radius: 0.25rem;
    overflow: hidden;
}

li::before {
    content: "";
    display: block;
    width: 100%;
    height: 1rem;
    position: absolute;
    top: 0;
    left: 0;
    background: linear-gradient(
        to right,
        var(--c1) var(--stop),
        var(--c2) var(--stop)
    );
}

h3 {
    display: flex;
    align-items: baseline;
    margin: 0 0 1rem;
    color: rgb(70, 70, 70);
}

h3::before {
    display: flex;
    justify-content: center;
    align-items: center;
    /* flex: grow - grow to fill the available space 
    shrink - shrink to fit the available space
    basis - nitial size of the flex item is based on its content or width/height properties. */
    flex: 0 0 auto;
    margin-right: 1rem;
    width: 3rem;
    height: 3rem;
    /* Counter using must gather with content */
    content: counter(list);
    padding: 1rem;
    border-radius: 50%;
    background-color: var(--c1);
    color: white;
    /* font-size: 2rem; */
}

/* Only when viewport width is at least 40em */
@media (min-width: 40em) {
    li {
        /* Add top/bot margin and center it */
        margin: 3rem auto;
        /* top l/r bot */
        padding: 3rem 2rem 2rem;
    }

    h3 {
        /* Increase font size */
        font-size: 2.25rem;
        /* top r/l bot */
        margin: 0 0 2rem;
    }
    
    h3::before {
        /* create space between numbers and h3 */
        margin-right: 1.5rem;
      }
}
